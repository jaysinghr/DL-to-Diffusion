# Autogenerated by nbdev

d = { 'settings': { 'branch': 'develop',
                'doc_baseurl': '/DL-to-Diffusion',
                'doc_host': 'https://Jay.github.io',
                'git_url': 'https://github.com/Jay/DL-to-Diffusion',
                'lib_path': 'minimalai'},
  'syms': { 'minimalai.accel': { 'minimalai.accel.AccelerateCB': ('ddpm_v2.html#acceleratecb', 'minimalai/accel.py'),
                                 'minimalai.accel.AccelerateCB.__init__': ('ddpm_v2.html#acceleratecb.__init__', 'minimalai/accel.py'),
                                 'minimalai.accel.AccelerateCB.backward': ('ddpm_v2.html#acceleratecb.backward', 'minimalai/accel.py'),
                                 'minimalai.accel.AccelerateCB.before_fit': ('ddpm_v2.html#acceleratecb.before_fit', 'minimalai/accel.py'),
                                 'minimalai.accel.MixedPrecision': ('ddpm_v2.html#mixedprecision', 'minimalai/accel.py'),
                                 'minimalai.accel.MixedPrecision.after_loss': ( 'ddpm_v2.html#mixedprecision.after_loss',
                                                                                'minimalai/accel.py'),
                                 'minimalai.accel.MixedPrecision.backward': ('ddpm_v2.html#mixedprecision.backward', 'minimalai/accel.py'),
                                 'minimalai.accel.MixedPrecision.before_batch': ( 'ddpm_v2.html#mixedprecision.before_batch',
                                                                                  'minimalai/accel.py'),
                                 'minimalai.accel.MixedPrecision.before_fit': ( 'ddpm_v2.html#mixedprecision.before_fit',
                                                                                'minimalai/accel.py'),
                                 'minimalai.accel.MixedPrecision.step': ('ddpm_v2.html#mixedprecision.step', 'minimalai/accel.py')},
            'minimalai.activations': { 'minimalai.activations.ActivationStatisticsCallback': ( 'minimalai-activations.html#activationstatisticscallback',
                                                                                               'minimalai/activations.py'),
                                       'minimalai.activations.ActivationStatisticsCallback.__init__': ( 'minimalai-activations.html#activationstatisticscallback.__init__',
                                                                                                        'minimalai/activations.py'),
                                       'minimalai.activations.ActivationStatisticsCallback.plot_activation_stats': ( 'minimalai-activations.html#activationstatisticscallback.plot_activation_stats',
                                                                                                                     'minimalai/activations.py'),
                                       'minimalai.activations.ActivationStatisticsCallback.plot_color_dimensions': ( 'minimalai-activations.html#activationstatisticscallback.plot_color_dimensions',
                                                                                                                     'minimalai/activations.py'),
                                       'minimalai.activations.ActivationStatisticsCallback.plot_dead_neurons': ( 'minimalai-activations.html#activationstatisticscallback.plot_dead_neurons',
                                                                                                                 'minimalai/activations.py'),
                                       'minimalai.activations.Hook': ('minimalai-activations.html#hook', 'minimalai/activations.py'),
                                       'minimalai.activations.Hook.__del__': ( 'minimalai-activations.html#hook.__del__',
                                                                               'minimalai/activations.py'),
                                       'minimalai.activations.Hook.__init__': ( 'minimalai-activations.html#hook.__init__',
                                                                                'minimalai/activations.py'),
                                       'minimalai.activations.Hook.remove': ( 'minimalai-activations.html#hook.remove',
                                                                              'minimalai/activations.py'),
                                       'minimalai.activations.Hooks': ('minimalai-activations.html#hooks', 'minimalai/activations.py'),
                                       'minimalai.activations.Hooks.__del__': ( 'minimalai-activations.html#hooks.__del__',
                                                                                'minimalai/activations.py'),
                                       'minimalai.activations.Hooks.__delitem__': ( 'minimalai-activations.html#hooks.__delitem__',
                                                                                    'minimalai/activations.py'),
                                       'minimalai.activations.Hooks.__enter__': ( 'minimalai-activations.html#hooks.__enter__',
                                                                                  'minimalai/activations.py'),
                                       'minimalai.activations.Hooks.__exit__': ( 'minimalai-activations.html#hooks.__exit__',
                                                                                 'minimalai/activations.py'),
                                       'minimalai.activations.Hooks.__init__': ( 'minimalai-activations.html#hooks.__init__',
                                                                                 'minimalai/activations.py'),
                                       'minimalai.activations.Hooks.remove': ( 'minimalai-activations.html#hooks.remove',
                                                                               'minimalai/activations.py'),
                                       'minimalai.activations.HooksCallback': ( 'minimalai-activations.html#hookscallback',
                                                                                'minimalai/activations.py'),
                                       'minimalai.activations.HooksCallback.__init__': ( 'minimalai-activations.html#hookscallback.__init__',
                                                                                         'minimalai/activations.py'),
                                       'minimalai.activations.HooksCallback.__iter__': ( 'minimalai-activations.html#hookscallback.__iter__',
                                                                                         'minimalai/activations.py'),
                                       'minimalai.activations.HooksCallback.__len__': ( 'minimalai-activations.html#hookscallback.__len__',
                                                                                        'minimalai/activations.py'),
                                       'minimalai.activations.HooksCallback._hook_function': ( 'minimalai-activations.html#hookscallback._hook_function',
                                                                                               'minimalai/activations.py'),
                                       'minimalai.activations.HooksCallback.after_fit': ( 'minimalai-activations.html#hookscallback.after_fit',
                                                                                          'minimalai/activations.py'),
                                       'minimalai.activations.HooksCallback.before_fit': ( 'minimalai-activations.html#hookscallback.before_fit',
                                                                                           'minimalai/activations.py'),
                                       'minimalai.activations.append_stats': ( 'minimalai-activations.html#append_stats',
                                                                               'minimalai/activations.py'),
                                       'minimalai.activations.get_histogram': ( 'minimalai-activations.html#get_histogram',
                                                                                'minimalai/activations.py'),
                                       'minimalai.activations.get_min_percentage': ( 'minimalai-activations.html#get_min_percentage',
                                                                                     'minimalai/activations.py'),
                                       'minimalai.activations.set_seed': ( 'minimalai-activations.html#set_seed',
                                                                           'minimalai/activations.py')},
            'minimalai.augment': { 'minimalai.augment.CapturePreds': ('minimalai-augment.html#capturepreds', 'minimalai/augment.py'),
                                   'minimalai.augment.CapturePreds.after_batch': ( 'minimalai-augment.html#capturepreds.after_batch',
                                                                                   'minimalai/augment.py'),
                                   'minimalai.augment.CapturePreds.after_fit': ( 'minimalai-augment.html#capturepreds.after_fit',
                                                                                 'minimalai/augment.py'),
                                   'minimalai.augment.CapturePreds.before_fit': ( 'minimalai-augment.html#capturepreds.before_fit',
                                                                                  'minimalai/augment.py'),
                                   'minimalai.augment.RandomCopy': ('minimalai-augment.html#randomcopy', 'minimalai/augment.py'),
                                   'minimalai.augment.RandomCopy.__init__': ( 'minimalai-augment.html#randomcopy.__init__',
                                                                              'minimalai/augment.py'),
                                   'minimalai.augment.RandomCopy.forward': ( 'minimalai-augment.html#randomcopy.forward',
                                                                             'minimalai/augment.py'),
                                   'minimalai.augment.RandomErasing': ('minimalai-augment.html#randomerasing', 'minimalai/augment.py'),
                                   'minimalai.augment.RandomErasing.__init__': ( 'minimalai-augment.html#randomerasing.__init__',
                                                                                 'minimalai/augment.py'),
                                   'minimalai.augment.RandomErasing.forward': ( 'minimalai-augment.html#randomerasing.forward',
                                                                                'minimalai/augment.py'),
                                   'minimalai.augment._flops': ('minimalai-augment.html#_flops', 'minimalai/augment.py'),
                                   'minimalai.augment.capture_preds': ('minimalai-augment.html#capture_preds', 'minimalai/augment.py'),
                                   'minimalai.augment.random_copy': ('minimalai-augment.html#random_copy', 'minimalai/augment.py'),
                                   'minimalai.augment.random_copy1': ('minimalai-augment.html#random_copy1', 'minimalai/augment.py'),
                                   'minimalai.augment.random_erase': ('minimalai-augment.html#random_erase', 'minimalai/augment.py'),
                                   'minimalai.augment.random_erasing': ('minimalai-augment.html#random_erasing', 'minimalai/augment.py'),
                                   'minimalai.augment.show_image_batch': ( 'minimalai-augment.html#show_image_batch',
                                                                           'minimalai/augment.py'),
                                   'minimalai.augment.summary': ('minimalai-augment.html#summary', 'minimalai/augment.py')},
            'minimalai.conv': { 'minimalai.conv.collate_data_on_device': ( 'minimalai-convolutions.html#collate_data_on_device',
                                                                           'minimalai/conv.py'),
                                'minimalai.conv.conv_layer': ('minimalai-convolutions.html#conv_layer', 'minimalai/conv.py'),
                                'minimalai.conv.move_data_to_device': ( 'minimalai-convolutions.html#move_data_to_device',
                                                                        'minimalai/conv.py')},
            'minimalai.datasets': { 'minimalai.datasets.DataLoaders': ( 'minimalai-dataset-visualization.html#dataloaders',
                                                                        'minimalai/datasets.py'),
                                    'minimalai.datasets.DataLoaders.__init__': ( 'minimalai-dataset-visualization.html#dataloaders.__init__',
                                                                                 'minimalai/datasets.py'),
                                    'minimalai.datasets.DataLoaders.from_dataset_dict': ( 'minimalai-dataset-visualization.html#dataloaders.from_dataset_dict',
                                                                                          'minimalai/datasets.py'),
                                    'minimalai.datasets.apply_inplace_transformation': ( 'minimalai-dataset-visualization.html#apply_inplace_transformation',
                                                                                         'minimalai/datasets.py'),
                                    'minimalai.datasets.collate_dict': ( 'minimalai-dataset-visualization.html#collate_dict',
                                                                         'minimalai/datasets.py'),
                                    'minimalai.datasets.get_grid': ( 'minimalai-dataset-visualization.html#get_grid',
                                                                     'minimalai/datasets.py'),
                                    'minimalai.datasets.show_image': ( 'minimalai-dataset-visualization.html#show_image',
                                                                       'minimalai/datasets.py'),
                                    'minimalai.datasets.show_images': ( 'minimalai-dataset-visualization.html#show_images',
                                                                        'minimalai/datasets.py'),
                                    'minimalai.datasets.subplots': ( 'minimalai-dataset-visualization.html#subplots',
                                                                     'minimalai/datasets.py')},
            'minimalai.diffusion': { 'minimalai.diffusion.DownBlock': ('diffusion-attn-cond.html#downblock', 'minimalai/diffusion.py'),
                                     'minimalai.diffusion.DownBlock.__init__': ( 'diffusion-attn-cond.html#downblock.__init__',
                                                                                 'minimalai/diffusion.py'),
                                     'minimalai.diffusion.DownBlock.forward': ( 'diffusion-attn-cond.html#downblock.forward',
                                                                                'minimalai/diffusion.py'),
                                     'minimalai.diffusion.EmbResBlock': ('diffusion-attn-cond.html#embresblock', 'minimalai/diffusion.py'),
                                     'minimalai.diffusion.EmbResBlock.__init__': ( 'diffusion-attn-cond.html#embresblock.__init__',
                                                                                   'minimalai/diffusion.py'),
                                     'minimalai.diffusion.EmbResBlock.forward': ( 'diffusion-attn-cond.html#embresblock.forward',
                                                                                  'minimalai/diffusion.py'),
                                     'minimalai.diffusion.EmbUNetModel': ( 'diffusion-attn-cond.html#embunetmodel',
                                                                           'minimalai/diffusion.py'),
                                     'minimalai.diffusion.EmbUNetModel.__init__': ( 'diffusion-attn-cond.html#embunetmodel.__init__',
                                                                                    'minimalai/diffusion.py'),
                                     'minimalai.diffusion.EmbUNetModel.forward': ( 'diffusion-attn-cond.html#embunetmodel.forward',
                                                                                   'minimalai/diffusion.py'),
                                     'minimalai.diffusion.SelfAttention': ( 'diffusion-attn-cond.html#selfattention',
                                                                            'minimalai/diffusion.py'),
                                     'minimalai.diffusion.SelfAttention.__init__': ( 'diffusion-attn-cond.html#selfattention.__init__',
                                                                                     'minimalai/diffusion.py'),
                                     'minimalai.diffusion.SelfAttention.forward': ( 'diffusion-attn-cond.html#selfattention.forward',
                                                                                    'minimalai/diffusion.py'),
                                     'minimalai.diffusion.SelfAttention2D': ( 'diffusion-attn-cond.html#selfattention2d',
                                                                              'minimalai/diffusion.py'),
                                     'minimalai.diffusion.SelfAttention2D.forward': ( 'diffusion-attn-cond.html#selfattention2d.forward',
                                                                                      'minimalai/diffusion.py'),
                                     'minimalai.diffusion.UpBlock': ('diffusion-attn-cond.html#upblock', 'minimalai/diffusion.py'),
                                     'minimalai.diffusion.UpBlock.__init__': ( 'diffusion-attn-cond.html#upblock.__init__',
                                                                               'minimalai/diffusion.py'),
                                     'minimalai.diffusion.UpBlock.forward': ( 'diffusion-attn-cond.html#upblock.forward',
                                                                              'minimalai/diffusion.py'),
                                     'minimalai.diffusion.abar': ('diffusion-attn-cond.html#abar', 'minimalai/diffusion.py'),
                                     'minimalai.diffusion.collate_ddpm': ( 'diffusion-attn-cond.html#collate_ddpm',
                                                                           'minimalai/diffusion.py'),
                                     'minimalai.diffusion.cond_sample': ('diffusion-attn-cond.html#cond_sample', 'minimalai/diffusion.py'),
                                     'minimalai.diffusion.ddim_step': ('diffusion-attn-cond.html#ddim_step', 'minimalai/diffusion.py'),
                                     'minimalai.diffusion.dl_ddpm': ('diffusion-attn-cond.html#dl_ddpm', 'minimalai/diffusion.py'),
                                     'minimalai.diffusion.inv_abar': ('diffusion-attn-cond.html#inv_abar', 'minimalai/diffusion.py'),
                                     'minimalai.diffusion.lin': ('diffusion-attn-cond.html#lin', 'minimalai/diffusion.py'),
                                     'minimalai.diffusion.noisify': ('diffusion-attn-cond.html#noisify', 'minimalai/diffusion.py'),
                                     'minimalai.diffusion.pre_conv': ('diffusion-attn-cond.html#pre_conv', 'minimalai/diffusion.py'),
                                     'minimalai.diffusion.sample': ('diffusion-attn-cond.html#sample', 'minimalai/diffusion.py'),
                                     'minimalai.diffusion.saved': ('diffusion-attn-cond.html#saved', 'minimalai/diffusion.py'),
                                     'minimalai.diffusion.timestep_embedding': ( 'diffusion-attn-cond.html#timestep_embedding',
                                                                                 'minimalai/diffusion.py'),
                                     'minimalai.diffusion.upsample': ('diffusion-attn-cond.html#upsample', 'minimalai/diffusion.py')},
            'minimalai.diffusion2': { 'minimalai.diffusion2.DownBlock': ( 'diffusion-attn-nodownsave.html#downblock',
                                                                          'minimalai/diffusion2.py'),
                                      'minimalai.diffusion2.DownBlock.__init__': ( 'diffusion-attn-nodownsave.html#downblock.__init__',
                                                                                   'minimalai/diffusion2.py'),
                                      'minimalai.diffusion2.DownBlock.forward': ( 'diffusion-attn-nodownsave.html#downblock.forward',
                                                                                  'minimalai/diffusion2.py'),
                                      'minimalai.diffusion2.EmbResBlock': ( 'diffusion-attn-nodownsave.html#embresblock',
                                                                            'minimalai/diffusion2.py'),
                                      'minimalai.diffusion2.EmbResBlock.__init__': ( 'diffusion-attn-nodownsave.html#embresblock.__init__',
                                                                                     'minimalai/diffusion2.py'),
                                      'minimalai.diffusion2.EmbResBlock.forward': ( 'diffusion-attn-nodownsave.html#embresblock.forward',
                                                                                    'minimalai/diffusion2.py'),
                                      'minimalai.diffusion2.EmbUNetModel': ( 'diffusion-attn-nodownsave.html#embunetmodel',
                                                                             'minimalai/diffusion2.py'),
                                      'minimalai.diffusion2.EmbUNetModel.__init__': ( 'diffusion-attn-nodownsave.html#embunetmodel.__init__',
                                                                                      'minimalai/diffusion2.py'),
                                      'minimalai.diffusion2.EmbUNetModel.forward': ( 'diffusion-attn-nodownsave.html#embunetmodel.forward',
                                                                                     'minimalai/diffusion2.py'),
                                      'minimalai.diffusion2.UpBlock': ('diffusion-attn-nodownsave.html#upblock', 'minimalai/diffusion2.py'),
                                      'minimalai.diffusion2.UpBlock.__init__': ( 'diffusion-attn-nodownsave.html#upblock.__init__',
                                                                                 'minimalai/diffusion2.py'),
                                      'minimalai.diffusion2.UpBlock.forward': ( 'diffusion-attn-nodownsave.html#upblock.forward',
                                                                                'minimalai/diffusion2.py'),
                                      'minimalai.diffusion2.abar': ('diffusion-attn-nodownsave.html#abar', 'minimalai/diffusion2.py'),
                                      'minimalai.diffusion2.ddim_step': ( 'diffusion-attn-nodownsave.html#ddim_step',
                                                                          'minimalai/diffusion2.py'),
                                      'minimalai.diffusion2.inv_abar': ( 'diffusion-attn-nodownsave.html#inv_abar',
                                                                         'minimalai/diffusion2.py'),
                                      'minimalai.diffusion2.lin': ('diffusion-attn-nodownsave.html#lin', 'minimalai/diffusion2.py'),
                                      'minimalai.diffusion2.noisify': ('diffusion-attn-nodownsave.html#noisify', 'minimalai/diffusion2.py'),
                                      'minimalai.diffusion2.pre_conv': ( 'diffusion-attn-nodownsave.html#pre_conv',
                                                                         'minimalai/diffusion2.py'),
                                      'minimalai.diffusion2.sample': ('diffusion-attn-nodownsave.html#sample', 'minimalai/diffusion2.py'),
                                      'minimalai.diffusion2.saved': ('diffusion-attn-nodownsave.html#saved', 'minimalai/diffusion2.py'),
                                      'minimalai.diffusion2.timestep_embedding': ( 'diffusion-attn-nodownsave.html#timestep_embedding',
                                                                                   'minimalai/diffusion2.py'),
                                      'minimalai.diffusion2.upsample': ( 'diffusion-attn-nodownsave.html#upsample',
                                                                         'minimalai/diffusion2.py')},
            'minimalai.fid': { 'minimalai.fid.ImageEval': ('fid.html#imageeval', 'minimalai/fid.py'),
                               'minimalai.fid.ImageEval.__init__': ('fid.html#imageeval.__init__', 'minimalai/fid.py'),
                               'minimalai.fid.ImageEval.fid': ('fid.html#imageeval.fid', 'minimalai/fid.py'),
                               'minimalai.fid.ImageEval.get_feats': ('fid.html#imageeval.get_feats', 'minimalai/fid.py'),
                               'minimalai.fid.ImageEval.kid': ('fid.html#imageeval.kid', 'minimalai/fid.py'),
                               'minimalai.fid._calc_fid': ('fid.html#_calc_fid', 'minimalai/fid.py'),
                               'minimalai.fid._calc_kid': ('fid.html#_calc_kid', 'minimalai/fid.py'),
                               'minimalai.fid._calc_stats': ('fid.html#_calc_stats', 'minimalai/fid.py'),
                               'minimalai.fid._sqrtm_newton_schulz': ('fid.html#_sqrtm_newton_schulz', 'minimalai/fid.py'),
                               'minimalai.fid._squared_mmd': ('fid.html#_squared_mmd', 'minimalai/fid.py')},
            'minimalai.imports': {},
            'minimalai.init': { 'minimalai.init.BatchTransformCallback': ( 'minimalai-initialization.html#batchtransformcallback',
                                                                           'minimalai/init.py'),
                                'minimalai.init.BatchTransformCallback.__init__': ( 'minimalai-initialization.html#batchtransformcallback.__init__',
                                                                                    'minimalai/init.py'),
                                'minimalai.init.BatchTransformCallback.before_batch': ( 'minimalai-initialization.html#batchtransformcallback.before_batch',
                                                                                        'minimalai/init.py'),
                                'minimalai.init.GeneralRelu': ('minimalai-initialization.html#generalrelu', 'minimalai/init.py'),
                                'minimalai.init.GeneralRelu.__init__': ( 'minimalai-initialization.html#generalrelu.__init__',
                                                                         'minimalai/init.py'),
                                'minimalai.init.GeneralRelu.forward': ( 'minimalai-initialization.html#generalrelu.forward',
                                                                        'minimalai/init.py'),
                                'minimalai.init._lsuv_stats': ('minimalai-initialization.html#_lsuv_stats', 'minimalai/init.py'),
                                'minimalai.init.clean_ipython_history': ( 'minimalai-initialization.html#clean_ipython_history',
                                                                          'minimalai/init.py'),
                                'minimalai.init.clean_memory': ('minimalai-initialization.html#clean_memory', 'minimalai/init.py'),
                                'minimalai.init.clean_traceback': ('minimalai-initialization.html#clean_traceback', 'minimalai/init.py'),
                                'minimalai.init.conv_layer': ('minimalai-initialization.html#conv_layer', 'minimalai/init.py'),
                                'minimalai.init.get_model': ('minimalai-initialization.html#get_model', 'minimalai/init.py'),
                                'minimalai.init.initialize_conv_weights': ( 'minimalai-initialization.html#initialize_conv_weights',
                                                                            'minimalai/init.py'),
                                'minimalai.init.lsuv_init': ('minimalai-initialization.html#lsuv_init', 'minimalai/init.py'),
                                'minimalai.init.plot_function': ('minimalai-initialization.html#plot_function', 'minimalai/init.py')},
            'minimalai.learner': { 'minimalai.learner.Callback': ('minimalai-learner.html#callback', 'minimalai/learner.py'),
                                   'minimalai.learner.CancelBatchException': ( 'minimalai-learner.html#cancelbatchexception',
                                                                               'minimalai/learner.py'),
                                   'minimalai.learner.CancelEpochException': ( 'minimalai-learner.html#cancelepochexception',
                                                                               'minimalai/learner.py'),
                                   'minimalai.learner.CancelFitException': ( 'minimalai-learner.html#cancelfitexception',
                                                                             'minimalai/learner.py'),
                                   'minimalai.learner.DeviceCallback': ('minimalai-learner.html#devicecallback', 'minimalai/learner.py'),
                                   'minimalai.learner.DeviceCallback.__init__': ( 'minimalai-learner.html#devicecallback.__init__',
                                                                                  'minimalai/learner.py'),
                                   'minimalai.learner.DeviceCallback.before_batch': ( 'minimalai-learner.html#devicecallback.before_batch',
                                                                                      'minimalai/learner.py'),
                                   'minimalai.learner.DeviceCallback.before_fit': ( 'minimalai-learner.html#devicecallback.before_fit',
                                                                                    'minimalai/learner.py'),
                                   'minimalai.learner.LRFinderCallback': ( 'minimalai-learner.html#lrfindercallback',
                                                                           'minimalai/learner.py'),
                                   'minimalai.learner.LRFinderCallback.__init__': ( 'minimalai-learner.html#lrfindercallback.__init__',
                                                                                    'minimalai/learner.py'),
                                   'minimalai.learner.LRFinderCallback.after_batch': ( 'minimalai-learner.html#lrfindercallback.after_batch',
                                                                                       'minimalai/learner.py'),
                                   'minimalai.learner.LRFinderCallback.before_fit': ( 'minimalai-learner.html#lrfindercallback.before_fit',
                                                                                      'minimalai/learner.py'),
                                   'minimalai.learner.LRFinderCallback.cleanup_fit': ( 'minimalai-learner.html#lrfindercallback.cleanup_fit',
                                                                                       'minimalai/learner.py'),
                                   'minimalai.learner.Learner': ('minimalai-learner.html#learner', 'minimalai/learner.py'),
                                   'minimalai.learner.Learner.__getattr__': ( 'minimalai-learner.html#learner.__getattr__',
                                                                              'minimalai/learner.py'),
                                   'minimalai.learner.Learner.__init__': ( 'minimalai-learner.html#learner.__init__',
                                                                           'minimalai/learner.py'),
                                   'minimalai.learner.Learner._fit': ('minimalai-learner.html#learner._fit', 'minimalai/learner.py'),
                                   'minimalai.learner.Learner._one_batch': ( 'minimalai-learner.html#learner._one_batch',
                                                                             'minimalai/learner.py'),
                                   'minimalai.learner.Learner._one_epoch': ( 'minimalai-learner.html#learner._one_epoch',
                                                                             'minimalai/learner.py'),
                                   'minimalai.learner.Learner.callback': ( 'minimalai-learner.html#learner.callback',
                                                                           'minimalai/learner.py'),
                                   'minimalai.learner.Learner.fit': ('minimalai-learner.html#learner.fit', 'minimalai/learner.py'),
                                   'minimalai.learner.Learner.one_epoch': ( 'minimalai-learner.html#learner.one_epoch',
                                                                            'minimalai/learner.py'),
                                   'minimalai.learner.Learner.training': ( 'minimalai-learner.html#learner.training',
                                                                           'minimalai/learner.py'),
                                   'minimalai.learner.MetricsCallback': ('minimalai-learner.html#metricscallback', 'minimalai/learner.py'),
                                   'minimalai.learner.MetricsCallback.__init__': ( 'minimalai-learner.html#metricscallback.__init__',
                                                                                   'minimalai/learner.py'),
                                   'minimalai.learner.MetricsCallback._log': ( 'minimalai-learner.html#metricscallback._log',
                                                                               'minimalai/learner.py'),
                                   'minimalai.learner.MetricsCallback.after_batch': ( 'minimalai-learner.html#metricscallback.after_batch',
                                                                                      'minimalai/learner.py'),
                                   'minimalai.learner.MetricsCallback.after_epoch': ( 'minimalai-learner.html#metricscallback.after_epoch',
                                                                                      'minimalai/learner.py'),
                                   'minimalai.learner.MetricsCallback.before_epoch': ( 'minimalai-learner.html#metricscallback.before_epoch',
                                                                                       'minimalai/learner.py'),
                                   'minimalai.learner.MetricsCallback.before_fit': ( 'minimalai-learner.html#metricscallback.before_fit',
                                                                                     'minimalai/learner.py'),
                                   'minimalai.learner.MomentumLearner': ('minimalai-learner.html#momentumlearner', 'minimalai/learner.py'),
                                   'minimalai.learner.MomentumLearner.__init__': ( 'minimalai-learner.html#momentumlearner.__init__',
                                                                                   'minimalai/learner.py'),
                                   'minimalai.learner.MomentumLearner.zero_grad': ( 'minimalai-learner.html#momentumlearner.zero_grad',
                                                                                    'minimalai/learner.py'),
                                   'minimalai.learner.ProgressCallback': ( 'minimalai-learner.html#progresscallback',
                                                                           'minimalai/learner.py'),
                                   'minimalai.learner.ProgressCallback.__init__': ( 'minimalai-learner.html#progresscallback.__init__',
                                                                                    'minimalai/learner.py'),
                                   'minimalai.learner.ProgressCallback._log': ( 'minimalai-learner.html#progresscallback._log',
                                                                                'minimalai/learner.py'),
                                   'minimalai.learner.ProgressCallback.after_batch': ( 'minimalai-learner.html#progresscallback.after_batch',
                                                                                       'minimalai/learner.py'),
                                   'minimalai.learner.ProgressCallback.after_epoch': ( 'minimalai-learner.html#progresscallback.after_epoch',
                                                                                       'minimalai/learner.py'),
                                   'minimalai.learner.ProgressCallback.before_epoch': ( 'minimalai-learner.html#progresscallback.before_epoch',
                                                                                        'minimalai/learner.py'),
                                   'minimalai.learner.ProgressCallback.before_fit': ( 'minimalai-learner.html#progresscallback.before_fit',
                                                                                      'minimalai/learner.py'),
                                   'minimalai.learner.SingleBatchCallback': ( 'minimalai-learner.html#singlebatchcallback',
                                                                              'minimalai/learner.py'),
                                   'minimalai.learner.SingleBatchCallback.after_batch': ( 'minimalai-learner.html#singlebatchcallback.after_batch',
                                                                                          'minimalai/learner.py'),
                                   'minimalai.learner.TrainCallback': ('minimalai-learner.html#traincallback', 'minimalai/learner.py'),
                                   'minimalai.learner.TrainCallback.__init__': ( 'minimalai-learner.html#traincallback.__init__',
                                                                                 'minimalai/learner.py'),
                                   'minimalai.learner.TrainCallback.backward': ( 'minimalai-learner.html#traincallback.backward',
                                                                                 'minimalai/learner.py'),
                                   'minimalai.learner.TrainCallback.calculate_loss': ( 'minimalai-learner.html#traincallback.calculate_loss',
                                                                                       'minimalai/learner.py'),
                                   'minimalai.learner.TrainCallback.predict': ( 'minimalai-learner.html#traincallback.predict',
                                                                                'minimalai/learner.py'),
                                   'minimalai.learner.TrainCallback.step': ( 'minimalai-learner.html#traincallback.step',
                                                                             'minimalai/learner.py'),
                                   'minimalai.learner.TrainCallback.zero_grad': ( 'minimalai-learner.html#traincallback.zero_grad',
                                                                                  'minimalai/learner.py'),
                                   'minimalai.learner.TrainLearner': ('minimalai-learner.html#trainlearner', 'minimalai/learner.py'),
                                   'minimalai.learner.TrainLearner.backward': ( 'minimalai-learner.html#trainlearner.backward',
                                                                                'minimalai/learner.py'),
                                   'minimalai.learner.TrainLearner.calculate_loss': ( 'minimalai-learner.html#trainlearner.calculate_loss',
                                                                                      'minimalai/learner.py'),
                                   'minimalai.learner.TrainLearner.predict': ( 'minimalai-learner.html#trainlearner.predict',
                                                                               'minimalai/learner.py'),
                                   'minimalai.learner.TrainLearner.step': ( 'minimalai-learner.html#trainlearner.step',
                                                                            'minimalai/learner.py'),
                                   'minimalai.learner.TrainLearner.zero_grad': ( 'minimalai-learner.html#trainlearner.zero_grad',
                                                                                 'minimalai/learner.py'),
                                   'minimalai.learner.WithCallbacks': ('minimalai-learner.html#withcallbacks', 'minimalai/learner.py'),
                                   'minimalai.learner.WithCallbacks.__call__': ( 'minimalai-learner.html#withcallbacks.__call__',
                                                                                 'minimalai/learner.py'),
                                   'minimalai.learner.WithCallbacks.__init__': ( 'minimalai-learner.html#withcallbacks.__init__',
                                                                                 'minimalai/learner.py'),
                                   'minimalai.learner.find_lr': ('minimalai-learner.html#find_lr', 'minimalai/learner.py'),
                                   'minimalai.learner.run_callbacks': ('minimalai-learner.html#run_callbacks', 'minimalai/learner.py'),
                                   'minimalai.learner.to_cpu': ('minimalai-learner.html#to_cpu', 'minimalai/learner.py')},
            'minimalai.resnet': { 'minimalai.resnet.ResBlock': ('minimalai-resnet.html#resblock', 'minimalai/resnet.py'),
                                   'minimalai.resnet.ResBlock.__init__': ( 'minimalai-resnet.html#resblock.__init__',
                                                                            'minimalai/resnet.py'),
                                   'minimalai.resnet.ResBlock.forward': ('minimalai-resnet.html#resblock.forward', 'minimalai/resnet.py'),
                                   'minimalai.resnet._conv_block': ('minimalai-resnet.html#_conv_block', 'minimalai/resnet.py'),
                                   'minimalai.resnet.print_shape_hook': ('minimalai-resnet.html#print_shape_hook', 'minimalai/resnet.py'),
                                   'minimalai.resnet.summary': ('minimalai-resnet.html#summary', 'minimalai/resnet.py')},
            'minimalai.sgd': { 'minimalai.sgd.Adam': ('minimalai-accelerate-sgd.html#adam', 'minimalai/sgd.py'),
                               'minimalai.sgd.Adam.__init__': ('minimalai-accelerate-sgd.html#adam.__init__', 'minimalai/sgd.py'),
                               'minimalai.sgd.Adam.optimization_step': ( 'minimalai-accelerate-sgd.html#adam.optimization_step',
                                                                         'minimalai/sgd.py'),
                               'minimalai.sgd.BaseSchedulerCallback': ( 'minimalai-accelerate-sgd.html#baseschedulercallback',
                                                                        'minimalai/sgd.py'),
                               'minimalai.sgd.BaseSchedulerCallback.__init__': ( 'minimalai-accelerate-sgd.html#baseschedulercallback.__init__',
                                                                                 'minimalai/sgd.py'),
                               'minimalai.sgd.BaseSchedulerCallback._step': ( 'minimalai-accelerate-sgd.html#baseschedulercallback._step',
                                                                              'minimalai/sgd.py'),
                               'minimalai.sgd.BaseSchedulerCallback.before_fit': ( 'minimalai-accelerate-sgd.html#baseschedulercallback.before_fit',
                                                                                   'minimalai/sgd.py'),
                               'minimalai.sgd.BatchSchedulerCallback': ( 'minimalai-accelerate-sgd.html#batchschedulercallback',
                                                                         'minimalai/sgd.py'),
                               'minimalai.sgd.BatchSchedulerCallback.after_batch': ( 'minimalai-accelerate-sgd.html#batchschedulercallback.after_batch',
                                                                                     'minimalai/sgd.py'),
                               'minimalai.sgd.EpochSchedulerCallback': ( 'minimalai-accelerate-sgd.html#epochschedulercallback',
                                                                         'minimalai/sgd.py'),
                               'minimalai.sgd.EpochSchedulerCallback.after_epoch': ( 'minimalai-accelerate-sgd.html#epochschedulercallback.after_epoch',
                                                                                     'minimalai/sgd.py'),
                               'minimalai.sgd.HasLearnerCallback': ('minimalai-accelerate-sgd.html#haslearnercallback', 'minimalai/sgd.py'),
                               'minimalai.sgd.HasLearnerCallback.after_fit': ( 'minimalai-accelerate-sgd.html#haslearnercallback.after_fit',
                                                                               'minimalai/sgd.py'),
                               'minimalai.sgd.HasLearnerCallback.before_fit': ( 'minimalai-accelerate-sgd.html#haslearnercallback.before_fit',
                                                                                'minimalai/sgd.py'),
                               'minimalai.sgd.Momentum': ('minimalai-accelerate-sgd.html#momentum', 'minimalai/sgd.py'),
                               'minimalai.sgd.Momentum.__init__': ('minimalai-accelerate-sgd.html#momentum.__init__', 'minimalai/sgd.py'),
                               'minimalai.sgd.Momentum.optimization_step': ( 'minimalai-accelerate-sgd.html#momentum.optimization_step',
                                                                             'minimalai/sgd.py'),
                               'minimalai.sgd.RMSProp': ('minimalai-accelerate-sgd.html#rmsprop', 'minimalai/sgd.py'),
                               'minimalai.sgd.RMSProp.__init__': ('minimalai-accelerate-sgd.html#rmsprop.__init__', 'minimalai/sgd.py'),
                               'minimalai.sgd.RMSProp.optimization_step': ( 'minimalai-accelerate-sgd.html#rmsprop.optimization_step',
                                                                            'minimalai/sgd.py'),
                               'minimalai.sgd.RecorderCallback': ('minimalai-accelerate-sgd.html#recordercallback', 'minimalai/sgd.py'),
                               'minimalai.sgd.RecorderCallback.__init__': ( 'minimalai-accelerate-sgd.html#recordercallback.__init__',
                                                                            'minimalai/sgd.py'),
                               'minimalai.sgd.RecorderCallback.after_batch': ( 'minimalai-accelerate-sgd.html#recordercallback.after_batch',
                                                                               'minimalai/sgd.py'),
                               'minimalai.sgd.RecorderCallback.before_fit': ( 'minimalai-accelerate-sgd.html#recordercallback.before_fit',
                                                                              'minimalai/sgd.py'),
                               'minimalai.sgd.RecorderCallback.plot': ( 'minimalai-accelerate-sgd.html#recordercallback.plot',
                                                                        'minimalai/sgd.py'),
                               'minimalai.sgd.SGD': ('minimalai-accelerate-sgd.html#sgd', 'minimalai/sgd.py'),
                               'minimalai.sgd.SGD.__init__': ('minimalai-accelerate-sgd.html#sgd.__init__', 'minimalai/sgd.py'),
                               'minimalai.sgd.SGD.optimization_step': ( 'minimalai-accelerate-sgd.html#sgd.optimization_step',
                                                                        'minimalai/sgd.py'),
                               'minimalai.sgd.SGD.regularization_step': ( 'minimalai-accelerate-sgd.html#sgd.regularization_step',
                                                                          'minimalai/sgd.py'),
                               'minimalai.sgd.SGD.step': ('minimalai-accelerate-sgd.html#sgd.step', 'minimalai/sgd.py'),
                               'minimalai.sgd.SGD.zero_grad': ('minimalai-accelerate-sgd.html#sgd.zero_grad', 'minimalai/sgd.py'),
                               'minimalai.sgd.plot_scheduler_learning_rates': ( 'minimalai-accelerate-sgd.html#plot_scheduler_learning_rates',
                                                                                'minimalai/sgd.py')},
            'minimalai.stability': {},
            'minimalai.training': { 'minimalai.training.Dataset': ('minibatch_training.html#dataset', 'minimalai/training.py'),
                                    'minimalai.training.Dataset.__getitem__': ( 'minibatch_training.html#dataset.__getitem__',
                                                                                'minimalai/training.py'),
                                    'minimalai.training.Dataset.__init__': ( 'minibatch_training.html#dataset.__init__',
                                                                             'minimalai/training.py'),
                                    'minimalai.training.Dataset.__len__': ( 'minibatch_training.html#dataset.__len__',
                                                                            'minimalai/training.py'),
                                    'minimalai.training.accuracy': ('minibatch_training.html#accuracy', 'minimalai/training.py'),
                                    'minimalai.training.fit': ('minibatch_training.html#fit', 'minimalai/training.py'),
                                    'minimalai.training.get_dataloaders': ( 'minibatch_training.html#get_dataloaders',
                                                                            'minimalai/training.py'),
                                    'minimalai.training.report_metrics': ( 'minibatch_training.html#report_metrics',
                                                                           'minimalai/training.py')}}}
